exit
next
SimpleClientSerializer.new(object.client)
object.client
exit
@client
next
exit
next
object.client
exit
user_id
exit
@client
next
user_id
exit
@client
next
user_id
exit
object.client.to_a[0].first_name
object.client.to_a[0]
object.client.to_a
object.client.to_a.first
object.client.to_a.first.email
object.client.to_a.first.last_name
object.client.to_a.first.name
object.client.to_a.first
object.client
object.client.to_a
object.client.to_a[9]
object.client.to_a[1]
object.client.to_a.user
object.client.to_a
exit
object.client.values
object.client
object.client.methods
object.client.User
object.client.user
object.client.all
object.client.hash
object.client.each do |s|
object.client.methods
object.client.first_name
object.client.name
object.client.id
object.client.User_id
object.client.user_id
object.client
exit
next
@items
exit
@users
@user
exit
User.methods
User.by_name
User.methods
value
key
exit
@user.public_send(name, "Pepe")
@user.public_send(name: "Pepe")
@user.public_send(name, "Pepe")
params
@users
exit
next
params
exit
Experience.find_by(status: 3)
Experience.find_by(status: 2)
Experience.find_by(status: 1)
Experience.find_by(status: params[:status])
Experience.find_by(params[:status])
Experience.find_by(params[:status].to_i)
params[:status].to_i
params[:status]
exit
_type
self.user_type
next
current_user.user_type
exit
current_user.user_type?('unlimited')
current_user.user_type?(unlimited)
current_user.user_type
current_user.user_type?(:unlimited)
current_user.user_type?
exit
current_user.user_type?
current_user
current_user.user_type?(:unlimited)
